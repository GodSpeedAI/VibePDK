name: CI

on:
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # Setup Volta (Node toolchain manager)
      - name: Setup Volta
        uses: volta-cli/action@v4
      - name: Install Node & pnpm via Volta
        run: |
          volta install node@24
          volta install pnpm@latest
      - name: Resolve pnpm store path
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install just (for task runner)
        run: sudo apt-get update && sudo apt-get install -y just
      - name: Install Node dependencies
        run: pnpm install --frozen-lockfile
      - name: Setup uv (Python package manager)
        uses: astral-sh/setup-uv@v3
      - name: Install Python deps (uv)
        run: |
          uv pip install --system pyyaml
      - name: Validate CALM
        run: |
          just calm-to-domain --help || true
          # When a CALM CLI is available, insert validation command here
      - name: Translator dry-run
        run: |
          python tools/transformers/translator.py --from-calm architecture/calm/system.calm.json --to-domain /tmp/domain.yaml
          python tools/transformers/translator.py --from-domain domain/domain.yaml --to-calm /tmp/system.calm.json
      - name: Nx workspace lint
        run: |
          pnpm dlx nx format:check
          pnpm dlx nx lint
      - name: Snapshot tests
        run: |
          just snapshot
      - name: Build
        run: |
          pnpm dlx nx build
